##########################################################################
#                         SET UP CLUSTER UTILITY
##########################################################################

get_ip () {
  local myip=$(host $1|awk 'NR==1{print $4}')
  if [[ $myip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
     echo $myip
   else
     echo ''
   fi
}

check_status_and_exit_on_error () {
  retVal=$?
  if [ ! $retVal -eq 0 ]; then
    exit $retVal
  fi
}

create_password_file () {

#create a passwd file if it does not exist!
  if [ ! -f $1 ]; then

    local passwd_dir=$(dirname $1)
    mkdir -p $passwd_dir

    install /dev/null -m0600 -omysql -gmysql "$1"

    cat >"$1" <<EOF
      [client]
        password="$2"
EOF
  fi
}


wait_for_mysqld () {
  set -e

  local host="$1"
  local count=1
  local passwd_file="$2"
   
  echo "Connect to mysqld on sever $host attempt $count/10"
  until mysql --defaults-extra-file="$passwd_file" -h "$host" -u replication -e '\s'; do
    >&2 echo "Mysql is unavailable - sleeping"
    sleep 20
    count=$((count+1))
    if [ $count -gt 10 ]; then
      echo "Max number of connection - exiting"
      exit 1
    fi
    echo "Connect to mysqld on sever $host attempt $count/10"
  done

  echo "Mysqld is up - go ahead"
}

wait_for_master () {
  set -e

  local masterip="$1"
  local cmd="SELECT MEMBER_STATE \
       FROM performance_schema.replication_group_members \
       WHERE MEMBER_HOST='$masterip'\G;"
  local count=1
  local passwd_file="$2"

  echo "Connect to master on sever $masterip attempt $count/10"
  result=$(mysql --defaults-extra-file="$passwd_file" -h "$masterip" -u replication -e "$cmd"|grep ONLINE)

  until [ "${results}" != "MEMBER_STATE: ONLINE" ]; do
    >&2 echo "Master is unavailable - sleeping"
    sleep 20
    count=$((count+1))
    if [ $count -gt 10 ]; then
      >&2 echo "Max number of connection - exiting"
      exit 1
    fi
    echo "Connect to master on sever $masterip attempt $count/10"
  done

  echo "Master is online - go ahead"
}
